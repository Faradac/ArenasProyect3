<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIAAqBwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAAgAAAAIAgGAAAAc3p69AAAAAFz
        UkdCAdnJLH8AAAAJcEhZcwAACxMAAAsTAQCanBgAAAbPSURBVHictVd5TBRnFDdWUFyBzZ6ZmQVPXJad
        7OwREKmA2V0gwGJgcbMrUi4jKq0G4tGGYoI1hpgajG00+kePxDMetUpMUGs8mtamWa+kouHwwEpsF6sS
        D5DA6/u+mV2L6B8cneSXb2b2zfd+7/jeezthwgiurs4Hcz3ZLvA4ssBrRzizweMkK0Em3mfCupWrKkey
        54iuz6rWrDNoWDApGTArWRAUDAi4mvHZotDivRaW5y/2/28Elubk/coT5ajMSleRgEmlRRIiHILtxfF9
        +93jrvzkvgNusjm1VslQa81KkQCv1lIS5J3AxMAyj2/7uBNY4S3aLmh0qJylHuBRoUVBXE9CwlLl5F5A
        OEyJ1/u6uieNm/Jzx09OtVsSW0wqFmxyNqSUul2hoTkh5oL4fkEcD981fp0zbgS2fFprSzXwdHOi3KwM
        ggGT/A0B6gEaEh00bKg7N24E1i1bcYxYH7QwqMyCipJiZkveYDExOZEEyjrMtn9OHT06a8zKTx0+okoz
        mu+R2JPk4yVYFRw4jRaoKSl/ykvkKCnJCxbdTNi6sb54zAQaauuWCGwMTTwCk4oQIMnGQV5Kun/bxvrK
        NINpWHjIsyslbc+YlPd0PgyvyHcf4NUMTThSbKgXMPtt7CyoKa+kxy3LOs9vUjBDcoOgMNUB2+q+sI2a
        wK7NDYIn3f4qeM5pASIVT8VBtjX5xeXmn2jB8doza3niISk/gmRNKFdXVb1l1AQ21VRvMauJyzVStdPQ
        jY2ooCQvP5TlR7/9PlXQxiIxHa0DtD5IJ8ObkT360lzozLgk0DPPiZbhPUk+QRkD6yuqhjSd6rIKfM/Q
        qshrUDnxFBJJiUuA7s7OuSNWfv7M6enJej1WPIZCCFU+BjKERAi039f9V75+9eoKq1xN3U9IWElOKEhN
        YAGP8cERE2io27iHHC9BqvtiAmJcEZ9XfXLlbfm/29pmps1JoHFPUIsdkxxdkrAee0bPiAnkp6YHLAqs
        /QouBDOGwoCk9u7c885u5810nRNouNB6ldgnLPjMqzk4tf/Q+zskdD8Mh786BfizoxAe3snr+/1CfV60
        DHKnREDu5AhwSchGlMXFwcD9jhzovPMhPHgwFx7cTYKujgx41OG8duJYc5JcgSHTgFHNhIoTqaJVRSXv
        75CdjVvXX7YZoM3IQrtBB+1xHLTFs9Cm56Bdz0JHHAt3EO0E8Ry0okxrvA5u6WOhFWVuGTRw26CFGwl6
        qOU4SIpSglkeS623EgJyBtJ4y/tPQ6CooPl5bCQMaKfAADMNBnEFdgq85sKgnw2HQQImDAAxSEGeJ+Pv
        EbhGwAAbht+FQR8XBadjdJAeqaaKgx2SHMnUOCNsqlk/fFyDrk5lV8Z8VDIR+nGzfkaGG07GjWXQp0Ml
        rCyEfhZ/R2IErylQTitDWUJ8CjXg1gwNlGO9SJJLY1twXEOUuPKbhxEY3L2jMTBLDgPcBLQoHDcNRwJk
        jUSLiEIZJTUEEpE+9NBrSiiCyg/i/aM5MtjFKSApOtiYgvMiA+kmS+DMiZPThxB4uLISelFJL37cy0VC
        r070Qh+jgD52GrW8l5PBK50MXkp4FQLxwjSUi4KXqJQQeR4TAT/P1sCCSKXUnBhpXsSVmwGN9Zs/GkLg
        9to1/sc+15XHvgL/XfeiF/u4aDisJVDBIVyPaKLhEBMNv9gMgSfeHP8TX67/idcVwrOl+X889eVdfbyk
        4NqzMnfrU88if1upr6Vg5hw6tIpzo4aGgHRIX6arpeP6zalvHcPuD3q6uiduLq64asNjlBwlhxTEvOho
        SJYrIVGhgprCwnc2FejpikZMgpfdYbjS6thzs1VVmlNwT1C+KWS0NqBH7EYrfLP96+EdckfDVqMj3vJK
        wOIjzv0acezGjxboeahbXT2itlpTusxtYWLpXjz1ALZwOUPniLXLVw03ZnVZeYkVO5pVHkMrnpm2X4a6
        zW5ObGnaf3DqO/S899rzZeP0FH1CwKiSWjmpjHLRoMWOrEsXm06pQsLYrZTFuYvO83KtNFaJiUNdqI7F
        2l+9YSTKg9cKX5HfqGFo/zBLfUTAspw8Iw6yrElvPLq1ts7pNCdKAwdDhw6rNGCkGywv9n612zAaAutX
        VlXO1xtEAji+m6VcIDPlmpKKwyHBNWUVO+NpB9NKQlrafkk3dC/MHPVA0Xb9hoqEj4xrNtoXSEHCfMBw
        +Jy5/SFB/M8XoK03NNeJRGw42ZYWeGpHS4BcK7zF2NY5caiVjCMeMLEz4GJT88f0L3emLRkWGs3gkGBP
        EOFOcwR+O3shdSwEzv7QVJxmssJCHvfkLRTkPhXXErf3x38B8p3dGXMXwNEAAAAASUVORK5CYII=
</value>
  </data>
</root>